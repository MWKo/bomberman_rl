from settings import ROWS, COLS
import events as e

ACTIONS = ['UP', 'RIGHT', 'DOWN', 'LEFT', 'WAIT', 'BOMB']

# OLD FEATURES
# FEAT_WALLS = 0
# FEAT_CRATES = 1
# FEAT_COINS = 2
# FEAT_BOMBS = 3
# FEAT_OTHERS = 4
# 
# FEATURE_SHAPE_OLD = (5, 2 * ROWS - 3, 2 * COLS - 3)
# FEATURE_SIZE_OLD = FEATURE_SHAPE_OLD[0] * FEATURE_SHAPE_OLD[1] * FEATURE_SHAPE_OLD[2]


COIN_POS_FEATURES_LENGTH = 4
COIN_DIST_FEATURES_LENGTH = 4
CRATE_POS_FEATURES_LENGTH = 4
CRATE_DIST_FEATURES_LENGTH = 5
LIVE_SAVING_FEATURES_LENGTH = len(ACTIONS)
DEADLY_FEATURES_LENGTH = len(ACTIONS)
BOMB_SURVIVABLE_FEATURES_LENGTH = 1

COIN_POS_FEATURES_START = 1
COIN_POS_FEATURES_END = COIN_POS_FEATURES_START + COIN_POS_FEATURES_LENGTH

COIN_DIST_FEATURES_START = COIN_POS_FEATURES_END
COIN_DIST_FEATURES_END = COIN_DIST_FEATURES_START + COIN_DIST_FEATURES_LENGTH

CRATE_POS_FEATURES_START = COIN_DIST_FEATURES_END
CRATE_POS_FEATURES_END = CRATE_POS_FEATURES_START + CRATE_POS_FEATURES_LENGTH

CRATE_DIST_FEATURES_START = CRATE_POS_FEATURES_END
CRATE_DIST_FEATURES_END = CRATE_DIST_FEATURES_START + CRATE_DIST_FEATURES_LENGTH

LIVE_SAVING_FEATURES_START = CRATE_DIST_FEATURES_END
LIVE_SAVING_FEATURES_END = LIVE_SAVING_FEATURES_START + LIVE_SAVING_FEATURES_LENGTH

DEADLY_FEATURES_START = LIVE_SAVING_FEATURES_END
DEADLY_FEATURES_END = DEADLY_FEATURES_START + DEADLY_FEATURES_LENGTH

BOMB_SURVIVABLE_FEATURES_START = DEADLY_FEATURES_END
BOMB_SURVIVABLE_FEATURES_END = BOMB_SURVIVABLE_FEATURES_START + BOMB_SURVIVABLE_FEATURES_LENGTH

FEATURE_SIZE = BOMB_SURVIVABLE_FEATURES_END

# Events
UNNECESSARY_WAITING = "UNNECESSARY_WAITING"


DEFAULT_CONFIG = {
    'model_filename': "linear_model.pt",
    'override_model': True,
    'exploration': {
        'epsilon': 0.1,
        'action_probabilities': [.2, .2, .2, .2, .1, .1]
    },
    'exploration_probability': 0.1,
    'learning_rate': 0.01,
    'gamma': 0.98,
    'learning_stepsize': 1,
    'rewards': {
        e.COIN_COLLECTED: 1,
        e.KILLED_OPPONENT: 5,
        e.CRATE_DESTROYED: 0.3,
        e.KILLED_SELF: -3,
    }
}